plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "io.freefair.lombok" version "5.1.0"
    id "org.sonarqube" version "2.7"
    id 'jacoco'
}

group = 'com.boubou'
sourceCompatibility = '11'
version = '1.0.0'

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.jar"
}

repositories {
    mavenCentral()
}

ext{
    jsr305Version = '3.0.2'
    junitVersion = '5.3.1'
    dbVersion = '42.2.8'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.google.code.findbugs:jsr305:'+ jsr305Version

    runtime 'org.postgresql:postgresql:' + dbVersion

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + junitVersion
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + junitVersion
    testCompile 'org.junit.jupiter:junit-jupiter-params:' + junitVersion
}

sonarqube {
    properties {
        property "sonar.projectName", "Java :: Simple Project :: SonarQube Scanner for Gradle"
        property "sonar.projectKey", "org.sonarqube:java-gradle-simple"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/customJacocoReportDir/test/jacocoTestReport.xml"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test {
    useJUnitPlatform()
}
